# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Microsoft
# This file is distributed under the same license as the NNI package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: NNI \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-29 17:40+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../Assessor/BuiltinAssessor.rst:6
msgid "Built-in Assessors"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:8
msgid ""
"NNI provides state-of-the-art tuning algorithms within our builtin-"
"assessors and makes them easy to use. Below is a brief overview of NNI's "
"current builtin Assessors."
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:10
msgid ""
"Note: Click the **Assessor's name** to get each Assessor's installation "
"requirements, suggested usage scenario, and a config example. A link to a"
" detailed description of each algorithm is provided at the end of the "
"suggested scenario for each Assessor."
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:12
msgid "Currently, we support the following Assessors:"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:18
msgid "Assessor"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:19
msgid "Brief Introduction of Algorithm"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:20
msgid "`Medianstop <#MedianStop>`__"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:21
msgid ""
"Medianstop is a simple early stopping rule. It stops a pending trial X at"
" step S if the trial’s best objective value by step S is strictly worse "
"than the median value of the running averages of all completed trials’ "
"objectives reported up to step S. `Reference Paper "
"<https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/46180.pdf>`__"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:22
msgid "`Curvefitting <#Curvefitting>`__"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:23
msgid ""
"Curve Fitting Assessor is an LPA (learning, predicting, assessing) "
"algorithm. It stops a pending trial X at step S if the prediction of the "
"final epoch's performance worse than the best final performance in the "
"trial history. In this algorithm, we use 12 curves to fit the accuracy "
"curve. `Reference Paper <http://aad.informatik.uni-freiburg.de/papers/15"
"-IJCAI-Extrapolation_of_Learning_Curves.pdf>`__"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:27
msgid "Usage of Builtin Assessors"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:29
msgid ""
"Usage of builtin assessors provided by the NNI SDK requires one to "
"declare the  **builtinAssessorName** and **classArgs** in the "
"``config.yml`` file. In this part, we will introduce the details of usage"
" and the suggested scenarios, classArg requirements, and an example for "
"each assessor."
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:31
msgid ""
"Note: Please follow the provided format when writing your ``config.yml`` "
"file."
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:33
msgid ":raw-html:`<a name=\"MedianStop\"></a>`"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:36
msgid "Median Stop Assessor"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:40
msgid "Builtin Assessor Name: **Medianstop**"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:43 ../../Assessor/BuiltinAssessor.rst:76
msgid "**Suggested scenario**"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:45
msgid ""
"It's applicable in a wide range of performance curves, thus, it can be "
"used in various scenarios to speed up the tuning progress. `Detailed "
"Description <./MedianstopAssessor.rst>`__"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:47 ../../Assessor/BuiltinAssessor.rst:82
msgid "**classArgs requirements:**"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:50
msgid ""
"**optimize_mode** (*maximize or minimize, optional, default = maximize*\\"
" ) - If 'maximize', assessor will **stop** the trial with smaller "
"expectation. If 'minimize', assessor will **stop** the trial with larger "
"expectation."
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:51
msgid ""
"**start_step** (*int, optional, default = 0*\\ ) - A trial is determined "
"to be stopped or not only after receiving start_step number of reported "
"intermediate results."
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:53 ../../Assessor/BuiltinAssessor.rst:90
msgid "**Usage example:**"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:64
msgid ":raw-html:`<br>`"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:66
msgid ":raw-html:`<a name=\"Curvefitting\"></a>`"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:69
msgid "Curve Fitting Assessor"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:73
msgid "Builtin Assessor Name: **Curvefitting**"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:78
msgid ""
"It's applicable in a wide range of performance curves, thus, it can be "
"used in various scenarios to speed up the tuning progress. Even better, "
"it's able to handle and assess curves with similar performance. `Detailed"
" Description <./CurvefittingAssessor.rst>`__"
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:80
msgid ""
"**Note**\\ , according to the original paper, only incremental functions "
"are supported. Therefore this assessor can only be used to maximize "
"optimization metrics. For example, it can be used for accuracy, but not "
"for loss."
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:85
msgid ""
"**epoch_num** (*int,** required***\\ ) - The total number of epochs. We "
"need to know the number of epochs to determine which points we need to "
"predict."
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:86
msgid ""
"**start_step** (*int, optional, default = 6*\\ ) - A trial is determined "
"to be stopped or not only after receiving start_step number of reported "
"intermediate results."
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:87
msgid ""
"**threshold** (*float, optional, default = 0.95*\\ ) - The threshold that"
" we use to decide to early stop the worst performance curve. For example:"
" if threshold = 0.95, and the best performance in the history is 0.9, "
"then we will stop the trial who's predicted value is lower than 0.95 * "
"0.9 = 0.855."
msgstr ""

#: ../../Assessor/BuiltinAssessor.rst:88
msgid ""
"**gap** (*int, optional, default = 1*\\ ) - The gap interval between "
"Assessor judgements. For example: if gap = 2, start_step = 6, then we "
"will assess the result when we get 6, 8, 10, 12...intermediate results."
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:2
msgid "Curve Fitting Assessor on NNI"
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:5
msgid "Introduction"
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:7
msgid ""
"The Curve Fitting Assessor is an LPA (learning, predicting, assessing) "
"algorithm. It stops a pending trial X at step S if the prediction of the "
"final epoch's performance is worse than the best final performance in the"
" trial history."
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:9
msgid ""
"In this algorithm, we use 12 curves to fit the learning curve. The set of"
" parametric curve models are chosen from this `reference paper "
"<http://aad.informatik.uni-freiburg.de/papers/15-IJCAI-"
"Extrapolation_of_Learning_Curves.pdf>`__. The learning curves' shape "
"coincides with our prior knowledge about the form of learning curves: "
"They are typically increasing, saturating functions."
msgstr ""

msgid "learning_curve"
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:17
msgid ""
"We combine all learning curve models into a single, more powerful model. "
"This combined model is given by a weighted linear combination:"
msgstr ""

msgid "f_comb"
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:25
msgid "with the new combined parameter vector"
msgstr ""

msgid "expression_xi"
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:33
msgid ""
"Assuming additive Gaussian noise and the noise parameter being "
"initialized to its maximum likelihood estimate."
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:35
msgid ""
"We determine the maximum probability value of the new combined parameter "
"vector by learning the historical data. We use such a value to predict "
"future trial performance and stop the inadequate experiments to save "
"computing resources."
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:37
msgid ""
"Concretely, this algorithm goes through three stages of learning, "
"predicting, and assessing."
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:41
msgid ""
"Step1: Learning. We will learn about the trial history of the current "
"trial and determine the \\xi at the Bayesian angle. First of all, We fit "
"each curve using the least-squares method, implemented by ``fit_theta``. "
"After we obtained the parameters, we filter the curve and remove the "
"outliers, implemented by ``filter_curve``. Finally, we use the MCMC "
"sampling method. implemented by ``mcmc_sampling``\\ , to adjust the "
"weight of each curve. Up to now, we have determined all the parameters in"
" \\xi."
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:44
msgid ""
"Step2: Predicting. It calculates the expected final result accuracy, "
"implemented by ``f_comb``\\ , at the target position (i.e., the total "
"number of epochs) by \\xi and the formula of the combined model."
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:47
msgid ""
"Step3: If the fitting result doesn't converge, the predicted value will "
"be ``None``. In this case, we return ``AssessResult.Good`` to ask for "
"future accuracy information and predict again. Furthermore, we will get a"
" positive value from the ``predict()`` function. If this value is "
"strictly greater than the best final performance in history * "
"``THRESHOLD``\\ (default value = 0.95), return ``AssessResult.Good``\\ , "
"otherwise, return  ``AssessResult.Bad``"
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:49
msgid ""
"The figure below is the result of our algorithm on MNIST trial history "
"data, where the green point represents the data obtained by Assessor, the"
" blue point represents the future but unknown data, and the red line is "
"the Curve predicted by the Curve fitting assessor."
msgstr ""

msgid "examples"
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:58
msgid "Usage"
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:60
msgid ""
"To use Curve Fitting Assessor, you should add the following spec in your "
"experiment's YAML config file:"
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:83
msgid "Limitation"
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:85
msgid ""
"According to the original paper, only incremental functions are "
"supported. Therefore this assessor can only be used to maximize "
"optimization metrics. For example, it can be used for accuracy, but not "
"for loss."
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:88
msgid "File Structure"
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:90
msgid ""
"The assessor has a lot of different files, functions, and classes. Here "
"we briefly describe a few of them."
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:93
msgid ""
"``curvefunctions.py`` includes all the function expressions and default "
"parameters."
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:94
msgid ""
"``modelfactory.py`` includes learning and predicting; the corresponding "
"calculation part is also implemented here."
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:95
msgid ""
"``curvefitting_assessor.py`` is the assessor which receives the trial "
"history and assess whether to early stop the trial."
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:98
msgid "TODO"
msgstr ""

#: ../../Assessor/CurvefittingAssessor.rst:101
msgid "Further improve the accuracy of the prediction and test it on more models."
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:2
msgid "Customize Assessor"
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:4
msgid "NNI supports to build an assessor by yourself for tuning demand."
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:6
msgid ""
"If you want to implement a customized Assessor, there are three things to"
" do:"
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:9
msgid "Inherit the base Assessor class"
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:10
msgid "Implement assess_trial function"
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:11
msgid "Configure your customized Assessor in experiment YAML config file"
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:13
msgid "**1. Inherit the base Assessor class**"
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:23
msgid "**2. Implement assess trial function**"
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:42
msgid "**3. Configure your customized Assessor in experiment YAML config file**"
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:44
msgid ""
"NNI needs to locate your customized Assessor class and instantiate the "
"class, so you need to specify the location of the customized Assessor "
"class and pass literal values as parameters to the __init__ constructor."
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:57
msgid ""
"Please noted in **2**. The object ``trial_history`` are exact the object "
"that Trial send to Assessor by using SDK ``report_intermediate_result`` "
"function."
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:59
msgid ""
"The working directory of your assessor is ``<home>/nni-"
"experiments/<experiment_id>/log``\\ , which can be retrieved with "
"environment variable ``NNI_LOG_DIRECTORY``\\ ,"
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:61
msgid "More detail example you could see:"
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:63
msgid ""
":githublink:`medianstop-assessor "
"<nni/algorithms/hpo/medianstop_assessor.py>`"
msgstr ""

#: ../../Assessor/CustomizeAssessor.rst:64
msgid ""
":githublink:`curvefitting-assessor "
"<nni/algorithms/hpo/curvefitting_assessor/>`"
msgstr ""

#: ../../Assessor/MedianstopAssessor.rst:2
msgid "Medianstop Assessor on NNI"
msgstr ""

#: ../../Assessor/MedianstopAssessor.rst:5
msgid "Median Stop"
msgstr ""

#: ../../Assessor/MedianstopAssessor.rst:7
msgid ""
"Medianstop is a simple early stopping rule mentioned in this `paper "
"<https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/46180.pdf>`__."
" It stops a pending trial X after step S if the trial’s best objective "
"value by step S is strictly worse than the median value of the running "
"averages of all completed trials’ objectives reported up to step S."
msgstr ""

